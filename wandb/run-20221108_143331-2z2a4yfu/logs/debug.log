2022-11-08 14:33:31,888 INFO    MainThread:76678 [wandb_setup.py:_flush():68] Configure stats pid to 76678
2022-11-08 14:33:31,888 INFO    MainThread:76678 [wandb_setup.py:_flush():68] Loading settings from /Users/nishadevadiga/.config/wandb/settings
2022-11-08 14:33:31,888 INFO    MainThread:76678 [wandb_setup.py:_flush():68] Loading settings from /Users/nishadevadiga/Downloads/Stock-Trading-Environment-master/wandb/settings
2022-11-08 14:33:31,888 INFO    MainThread:76678 [wandb_setup.py:_flush():68] Loading settings from environment variables: {'_require_service': 'True'}
2022-11-08 14:33:31,888 INFO    MainThread:76678 [wandb_setup.py:_flush():68] Inferring run settings from compute environment: {'program_relpath': 'main.py', 'program': '/Users/nishadevadiga/Downloads/Stock-Trading-Environment-master/main.py'}
2022-11-08 14:33:31,888 INFO    MainThread:76678 [wandb_init.py:_log_setup():476] Logging user logs to /Users/nishadevadiga/Downloads/Stock-Trading-Environment-master/wandb/run-20221108_143331-2z2a4yfu/logs/debug.log
2022-11-08 14:33:31,889 INFO    MainThread:76678 [wandb_init.py:_log_setup():477] Logging internal logs to /Users/nishadevadiga/Downloads/Stock-Trading-Environment-master/wandb/run-20221108_143331-2z2a4yfu/logs/debug-internal.log
2022-11-08 14:33:31,889 INFO    MainThread:76678 [wandb_init.py:init():516] calling init triggers
2022-11-08 14:33:31,889 INFO    MainThread:76678 [wandb_init.py:init():519] wandb.init called with sweep_config: {}
config: {'policy_type': 'MlpPolicy', 'total_timesteps': 25000, 'env_name': 'StockTradingEnv'}
2022-11-08 14:33:31,889 INFO    MainThread:76678 [wandb_init.py:init():569] starting backend
2022-11-08 14:33:31,889 INFO    MainThread:76678 [wandb_init.py:init():573] setting up manager
2022-11-08 14:33:31,893 INFO    MainThread:76678 [backend.py:_multiprocessing_setup():102] multiprocessing start_methods=spawn,fork,forkserver, using: spawn
2022-11-08 14:33:31,895 INFO    MainThread:76678 [wandb_init.py:init():580] backend started and connected
2022-11-08 14:33:31,898 INFO    MainThread:76678 [wandb_init.py:init():658] updated telemetry
2022-11-08 14:33:31,910 INFO    MainThread:76678 [wandb_init.py:init():693] communicating run to backend with 60 second timeout
2022-11-08 14:33:32,232 INFO    MainThread:76678 [wandb_run.py:_on_init():2000] communicating current version
2022-11-08 14:33:32,319 INFO    MainThread:76678 [wandb_run.py:_on_init():2004] got version response 
2022-11-08 14:33:32,319 INFO    MainThread:76678 [wandb_init.py:init():728] starting run threads in backend
2022-11-08 14:33:34,331 INFO    MainThread:76678 [wandb_run.py:_console_start():1980] atexit reg
2022-11-08 14:33:34,331 INFO    MainThread:76678 [wandb_run.py:_redirect():1838] redirect: SettingsConsole.WRAP_RAW
2022-11-08 14:33:34,332 INFO    MainThread:76678 [wandb_run.py:_redirect():1903] Wrapping output streams.
2022-11-08 14:33:34,332 INFO    MainThread:76678 [wandb_run.py:_redirect():1925] Redirects installed.
2022-11-08 14:33:34,332 INFO    MainThread:76678 [wandb_init.py:init():765] run started, returning control to user process
2022-11-08 14:33:34,361 INFO    MainThread:76678 [wandb_run.py:_config_callback():1160] config_cb None None {'algo': 'A2C', 'policy_class': "<class 'stable_baselines3.common.policies.ActorCriticPolicy'>", 'device': 'cpu', 'env': '<stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x14077e1d0>', '_vec_normalize_env': 'None', 'verbose': 1, 'policy_kwargs': "{'optimizer_class': <class 'torch.optim.rmsprop.RMSprop'>, 'optimizer_kwargs': {'alpha': 0.99, 'eps': 1e-05, 'weight_decay': 0}}", 'observation_space': 'Box([[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n  0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]], [[1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n  1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n  1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n  1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n  1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]\n [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n  1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]], (5, 42), float16)', 'action_space': 'Box([0. 0.], [3. 1.], (2,), float16)', 'n_envs': 1, 'num_timesteps': 0, '_total_timesteps': 20000, '_num_timesteps_at_start': 0, 'eval_env': 'None', 'seed': 'None', 'action_noise': 'None', 'start_time': 1667946814355473000, 'policy': 'ActorCriticPolicy(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1, end_dim=-1)\n  )\n  (mlp_extractor): MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n      (0): Linear(in_features=210, out_features=64, bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n    )\n    (value_net): Sequential(\n      (0): Linear(in_features=210, out_features=64, bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64, out_features=2, bias=True)\n  (value_net): Linear(in_features=64, out_features=1, bias=True)\n)', 'learning_rate': 0.0007, 'tensorboard_log': 'None', 'lr_schedule': '<function constant_fn.<locals>.func at 0x17d993ac0>', '_last_obs': '[[[0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 4.65e-06]\n  [0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 4.65e-06]\n  [0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00]\n  [0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00]\n  [0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00\n   0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00 0.00e+00]]]', '_last_episode_starts': '[ True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_logger': '<stable_baselines3.common.logger.Logger object at 0x17d9b7af0>', '_custom_logger': 'False', 'n_steps': 5, 'gamma': 0.99, 'gae_lambda': 1.0, 'ent_coef': 0.0, 'vf_coef': 0.5, 'max_grad_norm': 0.5, 'rollout_buffer': '<stable_baselines3.common.buffers.RolloutBuffer object at 0x140a435b0>', 'normalize_advantage': 'False'}
2022-11-08 14:34:46,815 INFO    MainThread:76678 [sb3.py:save_model():149] Saving model checkpoint to models/2z2a4yfu/model.zip
2022-11-08 14:34:48,606 INFO    MainThread:76678 [wandb_run.py:_finish():1746] finishing run nishamdev/StockTrading/2z2a4yfu
2022-11-08 14:34:48,606 INFO    MainThread:76678 [wandb_run.py:_atexit_cleanup():1949] got exitcode: 0
2022-11-08 14:34:48,607 INFO    MainThread:76678 [wandb_run.py:_restore():1932] restore
2022-11-08 14:34:48,607 INFO    MainThread:76678 [wandb_run.py:_restore():1938] restore done
2022-11-08 14:34:55,969 INFO    MainThread:76678 [wandb_run.py:_footer_history_summary_info():3377] rendering history
2022-11-08 14:34:55,971 INFO    MainThread:76678 [wandb_run.py:_footer_history_summary_info():3409] rendering summary
2022-11-08 14:34:55,976 INFO    MainThread:76678 [wandb_run.py:_footer_sync_info():3333] logging synced files
